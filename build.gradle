buildscript {
    ext.kotlin_version = '1.2.70'
    ext.ktor_version = '0.9.3'

    ext.exposed_version = '0.10.5'
    ext.h2_version = '1.4.197'
    ext.hikari_version = '3.2.0'

    ext.flexmark_version = '0.34.0'
    ext.fuel_version = '1.15.0'
    ext.handlebars_version = '4.1.0'
    ext.commons_email_version = '1.5'

    ext.logback_version = '1.2.3'
    ext.konf_version = '0.11'
    ext.guava_version = '26.0-jre'

    ext.rest_assured_version = '3.1.0'
    ext.junit_version = '5.2.0'
    ext.assertj_version = '3.10.0'
    ext.mockk_version = '1.8.8'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

kotlin {
    experimental {
        coroutines "enable"
    }
}

sourceSets {
    testIntegration {
        java.srcDir 'src/test-integration/java'
        kotlin.srcDir 'src/test-integration/kotlin'
        resources.srcDir 'src/test-integration/resources'
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}
configurations {
    provided
    testCompile.extendsFrom provided
    testIntegrationCompile.extendsFrom testCompile
    testIntegrationRuntime.extendsFrom testRuntime
}
task testIntegration(type: Test) {
    testClassesDirs = sourceSets.testIntegration.output.classesDirs
    classpath = sourceSets.testIntegration.runtimeClasspath
}

idea {
    module {
        testSourceDirs += project.sourceSets.testIntegration.java.srcDirs
        testSourceDirs += project.sourceSets.testIntegration.kotlin.srcDirs
        testSourceDirs += project.sourceSets.testIntegration.resources.srcDirs
    }
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestIntegrationKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    jcenter()
    maven { url = "https://dl.bintray.com/kotlin/ktor" }
    maven { url = "https://jitpack.io" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"
    compile "io.ktor:ktor-websockets:$ktor_version"

    compile "com.h2database:h2:$h2_version"
    compile "org.jetbrains.exposed:exposed:$exposed_version"
    compile "com.zaxxer:HikariCP:$hikari_version"

    compile "com.vladsch.flexmark:flexmark:$flexmark_version"
    compile "com.vladsch.flexmark:flexmark-ext-gfm-strikethrough:$flexmark_version"
    compile "com.vladsch.flexmark:flexmark-ext-tables:$flexmark_version"
    compile "com.vladsch.flexmark:flexmark-ext-autolink:$flexmark_version"
    compile "com.vladsch.flexmark:flexmark-ext-superscript:$flexmark_version"

    compile "io.webfolder:cdp4j:3.0.0"
    compile "com.github.chimbori:crux:2.0.1"
    compile 'com.github.shyiko.skedule:skedule:0.3.0'
    compile "com.google.guava:guava:$guava_version"
    compile "com.github.jknack:handlebars:$handlebars_version"
    compile "org.apache.commons:commons-email:$commons_email_version"

    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "com.uchuhimo:konf:$konf_version"

    testCompile "io.rest-assured:rest-assured:$rest_assured_version"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testCompile "org.assertj:assertj-core:$assertj_version"
    testCompile "io.mockk:mockk:$mockk_version"
}
