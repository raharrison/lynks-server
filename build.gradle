buildscript {
    ext.kotlin_version = '1.4.10'
    ext.ktor_version = '1.4.1'

    ext.exposed_version = '0.28.1'
    ext.h2_version = '1.4.199'
    ext.hikari_version = '3.4.5'

    ext.flexmark_version = '0.62.2'
    ext.handlebars_version = '4.2.0'
    ext.commons_email_version = '1.5'
    ext.logback_version = '1.2.3'
    ext.konf_version = '0.23.0'
    ext.guava_version = '30.0-jre'
    ext.commonslang_version = '3.11'
    ext.crux_version = '2.2.0'
    ext.jsoup_version = '1.9.2'
    ext.cdp4j_version = '3.0.15'
    ext.skedule_version = '0.4.0'

    ext.rest_assured_version = '4.3.2'
    ext.junit_version = '5.7.0'
    ext.assertj_version = '3.18.1'
    ext.mockk_version = '1.10.2'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'

sourceSets {
    testIntegration {
        java.srcDir 'src/testIntegration/java'
        kotlin.srcDir 'src/testIntegration/kotlin'
        resources.srcDir 'src/testIntegration/resources'
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}
configurations {
    testIntegrationImplementation.extendsFrom testImplementation
    testIntegrationRuntime.extendsFrom testRuntime
}
task testIntegration(type: Test) {
    testClassesDirs = sourceSets.testIntegration.output.classesDirs
    classpath = sourceSets.testIntegration.runtimeClasspath
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions {
        suppressWarnings = true
        jvmTarget = "1.8"
        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
    }
}
compileTestIntegrationKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    jcenter()
}

test {
    useJUnitPlatform()
    systemProperty "CONFIG_MODE", "TEST"
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation "io.ktor:ktor-websockets:$ktor_version"

    implementation "com.h2database:h2:$h2_version"
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "com.zaxxer:HikariCP:$hikari_version"

    implementation "com.vladsch.flexmark:flexmark:$flexmark_version"
    implementation "com.vladsch.flexmark:flexmark-ext-gfm-strikethrough:$flexmark_version"
    implementation "com.vladsch.flexmark:flexmark-ext-gfm-tasklist:$flexmark_version"
    implementation "com.vladsch.flexmark:flexmark-ext-tables:$flexmark_version"
    implementation "com.vladsch.flexmark:flexmark-ext-autolink:$flexmark_version"

    implementation "io.webfolder:cdp4j:$cdp4j_version"

    implementation "com.chimbori.crux:crux:$crux_version"
    implementation "org.apache.commons:commons-lang3:$commonslang_version"
    implementation "org.jsoup:jsoup:$jsoup_version"

    implementation "com.github.shyiko.skedule:skedule:$skedule_version"
    implementation "com.google.guava:guava:$guava_version"
    implementation "com.github.jknack:handlebars:$handlebars_version"
    implementation "org.apache.commons:commons-email:$commons_email_version"

    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "com.uchuhimo:konf-core:$konf_version"

    testImplementation "io.rest-assured:rest-assured:$rest_assured_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
}
